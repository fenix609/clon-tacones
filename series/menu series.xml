<?xml version="1.0" encoding="UTF-8" standalone="yes"?>

<menus>


<menu>
<title>[COLOR white]•[/COLOR] [B][COLOR white]BUSCADOR[/COLOR][COLOR red]                 SERIES[/COLOR][/B]</title>
<link>$doregex[results]</link>
<regex>
<name>results</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][results.param1][/COLOR][/B]</title>
<link>$doregex[season]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[results.param5]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    import difflib
    import xbmcgui
    from xml.etree import ElementTree
    SERIES_URL = 'https://raw.githubusercontent.com/fenix609/clon-tacones/main/series/buscador.xml'
    results = list()
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    inputText = xbmcgui.Dialog().input('Buscar Serie: ', type=xbmcgui.INPUT_ALPHANUM).upper()
    if not inputText or inputText == '' or inputText == ' ':
        return []
    series = xml.findall('serie')
    results = list()
    filtered_series = list(filter(lambda serie:
                                inputText in serie.find('title').text.upper()
                                or (difflib.SequenceMatcher(None, serie.find('title').text.upper(), inputText).ratio() * 100) > 60, series))

    METADATA_KEYS = ['title', 'info', 'year', 'genre', 'thumb', 'fanart']
    for serie in filtered_series:
        results.append(tuple([*[serie.find(key).text for key in METADATA_KEYS],
                            serie.get('id'), str(int(difflib.SequenceMatcher(None, serie.find('title').text.upper(), inputText).ratio() * 100))]))
    return list(sorted(results, key=lambda serie: serie[-1], reverse=True))
]]></expres>
<page></page>
</regex>
<regex>
<name>season</name>
<listrepeat><![CDATA[
<title>[B][COLOR red]•[/COLOR] [COLOR white][results.param1] [/COLOR][COLOR red] Temporada [season.param1][/COLOR][/B]</title>
<link>$doregex[episodes]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    results = list()
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    for season in seasons:
        results.append(
            tuple(list([season.get('id'), season.get('thumb')])))
    return results
]]></expres>
<page></page>
</regex><regex>
<name>episodes</name>
<listrepeat><![CDATA[
<title>[B][COLOR red][results.param1] [season.param1][/COLOR][COLOR white]   [episodes.param1][/COLOR][/B]</title>
<link>plugin://plugin.video.elementum/play?uri=magnet:?xt=urn:btih:[episodes.param2]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    selectedSeason = seasons.find("season/[@id='[season.param1]']")
    episodeLinks = list()
    for episode in list(sorted(selectedSeason.findall('episode'), key=lambda episode: int(episode.get('id')))):
        episodeLinks.append(
            tuple(list([episode.get('name'), episode.get('link')])))
    return episodeLinks
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/g412a9y.png</thumbnail>
<fanart>https://i.imgur.com/R7oMOZO.jpg</fanart>
</menu>

<menu>
<title>[COLOR white]•[/COLOR] [B][COLOR red]NOVEDADES[/COLOR][COLOR white]              MERAMENTE INFORMATIVO [/COLOR][/B]</title>
<link>$doregex[novedades]</link>
<regex>
<name>novedades</name>
<listrepeat><![CDATA[
<title>[B][COLOR red]·[/COLOR] [COLOR white][novedades.param1][/COLOR] [COLOR red][novedades.param2][/COLOR] [COLOR white][novedades.param3][/COLOR][/B]</title>
<link>N/A</link>
<thumbnail>[novedades.param4]</thumbnail>
<fanart>[novedades.param5]</fanart>
<info>[novedades.param6]</info>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
import re, xbmc, json, requests
def GetLSProData(page_data,Cookie_Jar,m):
	#xbmc.log("PAGEDATA: " + str(page_data),2)
	expresion = "([\d]+),([^,]+),([^,]+),([^,]+)\n"
	resultados_tmp = re.findall(expresion,page_data)
	#xbmc.log("resultados_tmp: " + str(len(resultados_tmp)),2)
	#return resultados_tmp
	resultados = []
	for resultado_tmp in resultados_tmp:
		#Valores por defecto
		title=resultado_tmp[1]
		temporada=resultado_tmp[2]
		episodio=resultado_tmp[3]
		thumbnail=""
		fanart=""
		info=""
		if str(resultado_tmp[0])!="0":
			#Obtenemos los datos de tmdb
			tmbd_url='https://api.themoviedb.org/3/tv/'+str(resultado_tmp[0])+'?api_key=48e8b0532d3b7728108a8245fd4551b2&language=es'
			#xbmc.log("tmbd_url: " + tmbd_url,2)
			request=requests.get(tmbd_url, verify=False)
			#xbmc.log("request.content: " + request.content,2)
			jsdata=json.loads(request.content)
			title=jsdata["name"]
			thumbnail='https://image.tmdb.org/t/p/w300'+jsdata["poster_path"]
			if jsdata["backdrop_path"] is not None:
				fanart='https://image.tmdb.org/t/p/w500'+jsdata["backdrop_path"]
			info=jsdata["overview"]
		resultados.append((title, temporada, episodio, thumbnail, fanart, info))
	#xbmc.log("resultados: " + str(len(resultados)),2)
	return resultados
]]></expres>
<page>https://pastebin.com/raw/xK0fNXET</page>
</regex>
<thumbnail>https://i.imgur.com/aUcHMhk.png</thumbnail>
<fanart>https://i.imgur.com/8L5Aaw9.jpg</fanart>
</menu>

<menu>
<title>[COLOR white]•[/COLOR] [B][COLOR red]SERIES[/COLOR][COLOR white]                         ALFABETICO[/COLOR][/B]</title>
<link>$doregex[results]</link>
<regex>
<name>results</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][results.param1][/COLOR][/B]</title>
<link>$doregex[season]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[results.param5]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    results = list()
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    series = xml.findall('serie')
    METADATA_KEYS = ['title', 'info', 'year', 'genre', 'thumb', 'fanart']
    for serie in list(sorted(series, key=lambda serie: serie.find('title').text)):
        results.append(tuple([*[serie.find(key).text for key in METADATA_KEYS],
            serie.get('id')]))

    return results

]]></expres>
<page></page>
</regex>
<regex>
<name>season</name>
<listrepeat><![CDATA[
<title>[B][COLOR red]•[/COLOR] [COLOR white][results.param1] [/COLOR][COLOR red] Temporada [season.param1][/COLOR][/B]</title>
<link>$doregex[episodes]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    results = list()
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    for season in seasons:
        results.append(
            tuple(list([season.get('id'), season.get('thumb')])))
    return results
]]></expres>
<page></page>
</regex><regex>
<name>episodes</name>
<listrepeat><![CDATA[
<title>[B][COLOR red][results.param1] [season.param1][/COLOR][COLOR white]   [episodes.param1][/COLOR][/B]</title>
<link>plugin://plugin.video.elementum/play?uri=magnet:?xt=urn:btih:[episodes.param2]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    selectedSeason = seasons.find("season/[@id='[season.param1]']")
    episodeLinks = list()
    for episode in list(sorted(selectedSeason.findall('episode'), key=lambda episode: int(episode.get('id')))):
        episodeLinks.append(
            tuple(list([episode.get('name'), episode.get('link')])))
    return episodeLinks
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/X0npVII.jpg</thumbnail>
<fanart>https://i.imgur.com/8L5Aaw9.jpg</fanart>
</menu>

<menu>
<title>[COLOR white]•[/COLOR] [B][COLOR red]SERIES[/COLOR][COLOR white]                         AÑO[/COLOR][/B]</title>
<link>$doregex[years]</link>
<regex>
<name>years</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][years.param1][/COLOR][/B]</title>
<link>$doregex[results]</link>
<year>[years.param1]</year>
<info>[years.param1]</info>
<thumbnail>https://i.imgur.com/wRdDrXp.png</thumbnail>
<fanart>https://i.imgur.com/R7oMOZO.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    years = list()
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    series = xml.findall('serie')
    for serie in series:
        years.append(serie.find('year').text)
    return sorted(list(set(years)), reverse=True)
]]></expres>
<page></page>
</regex>
<regex>
<name>results</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][results.param1][/COLOR][/B]</title>
<link>$doregex[season]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[results.param5]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    results = list()
    xml = ElementTree.fromstring(data)
    yearSeries = xml.findall("./serie/[year='[years.param1]']")
    METADATA_KEYS = ['title', 'info', 'year', 'genre', 'thumb', 'fanart']
    for serie in list(sorted(yearSeries, key=lambda serie: serie.find('title').text)):
        results.append(tuple([*[serie.find(key).text for key in METADATA_KEYS],
                            serie.get('id')]))
    return results

]]></expres>
<page></page>
</regex>
<regex>
<name>season</name>
<listrepeat><![CDATA[
<title>[B][COLOR red]•[/COLOR] [COLOR white][results.param1] [/COLOR][COLOR red] Temporada [season.param1][/COLOR][/B]</title>
<link>$doregex[episodes]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    results = list()
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    for season in seasons:
        results.append(
            tuple(list([season.get('id'), season.get('thumb')])))
    return results
]]></expres>
<page></page>
</regex><regex>
<name>episodes</name>
<listrepeat><![CDATA[
<title>[B][COLOR red][results.param1] [season.param1][/COLOR][COLOR white]   [episodes.param1][/COLOR][/B]</title>
<link>plugin://plugin.video.elementum/play?uri=magnet:?xt=urn:btih:[episodes.param2]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    selectedSeason = seasons.find("season/[@id='[season.param1]']")
    episodeLinks = list()
    for episode in list(sorted(selectedSeason.findall('episode'), key=lambda episode: int(episode.get('id')))):
        episodeLinks.append(
            tuple(list([episode.get('name'), episode.get('link')])))
    return episodeLinks
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/eyTvbyC.png</thumbnail>
<fanart>https://i.imgur.com/R7oMOZO.jpg</fanart>
</menu>


<menu>
<title>[COLOR white]•[/COLOR] [B][COLOR red]SERIES[/COLOR][COLOR white]                         GENERO[/COLOR][/B]</title>
<link>$doregex[genres]</link>
<regex>
<name>genres</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][genres.param1][/COLOR][/B]</title>
<link>$doregex[results]</link>
<year>[genres.param1]</year>
<info>[genres.param1]</info>
<thumbnail>https://i.imgur.com/EmZO0xz.jpg</thumbnail>
<fanart>https://i.imgur.com/R7oMOZO.jpg</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    import unicodedata
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    genres = list()
    data = requests.get(SERIES_URL).text
    data = unicodedata.normalize("NFKD", data).encode(
        "ascii", "ignore").decode("ascii")
    xml = ElementTree.fromstring(data)
    series = xml.findall('serie')
    for serie in series:
        for genre in serie.find('genre').text.strip().split('. '):
            genres.append(genre)
    return sorted(list(set(genres)))

]]></expres>
<page></page>
</regex>
<regex>
<name>results</name>
<listrepeat><![CDATA[
<title>[COLOR red]•[/COLOR] [B][COLOR white][results.param1][/COLOR][/B]</title>
<link>$doregex[season]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[results.param5]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    import unicodedata
    from xml.etree import ElementTree
    selectedGenre = '[genres.param1]'
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    data = unicodedata.normalize("NFKD", data).encode(
        "ascii", "ignore").decode("ascii")
    results = list()
    xml = ElementTree.fromstring(data)
    series = xml.findall('serie')
    METADATA_KEYS = ['title', 'info', 'year', 'genre', 'thumb', 'fanart']
    for serie in list(sorted(series, key=lambda serie: serie.find('title').text)):
        if selectedGenre in serie.find('genre').text:
            results.append(tuple([*[serie.find(key).text for key in METADATA_KEYS],
                                serie.get('id')]))
    return results

]]></expres>
<page></page>
</regex>

<regex>
<name>season</name>
<listrepeat><![CDATA[
<title>[B][COLOR red]•[/COLOR] [COLOR white][results.param1] [/COLOR][COLOR red] Temporada [season.param1][/COLOR][/B]</title>
<link>$doregex[episodes]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    results = list()
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    for season in seasons:
        results.append(
            tuple(list([season.get('id'), season.get('thumb')])))
    return results
]]></expres>
<page></page>
</regex><regex>
<name>episodes</name>
<listrepeat><![CDATA[
<title>[B][COLOR red][results.param1] [season.param1][/COLOR][COLOR white]   [episodes.param1][/COLOR][/B]</title>
<link>plugin://plugin.video.elementum/play?uri=magnet:?xt=urn:btih:[episodes.param2]</link>
<year>[results.param3]</year>
<genre>[results.param4]</genre>
<info>[results.param2]</info>
<thumbnail>[season.param2]</thumbnail>
<fanart>[results.param6]</fanart>
]]></listrepeat>
<expres><![CDATA[#$pyFunction
def GetLSProData(page_data, Cookie_Jar, m):
    import requests
    from xml.etree import ElementTree
    SERIES_URL = 'https://gitlab.com/stiletto1/s/-/raw/main/s'
    data = requests.get(SERIES_URL).text
    xml = ElementTree.fromstring(data)
    selectedSerie = xml.find("./serie/[@id='[results.param7]']")
    seasons = selectedSerie.find('seasons')
    selectedSeason = seasons.find("season/[@id='[season.param1]']")
    episodeLinks = list()
    for episode in list(sorted(selectedSeason.findall('episode'), key=lambda episode: int(episode.get('id')))):
        episodeLinks.append(
            tuple(list([episode.get('name'), episode.get('link')])))
    return episodeLinks
]]></expres>
<page></page>
</regex>
<thumbnail>https://i.imgur.com/E2xELih.png</thumbnail>
<fanart>https://i.imgur.com/R7oMOZO.jpg</fanart>
</menu>

</menus>